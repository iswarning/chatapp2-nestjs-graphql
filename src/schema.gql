# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ChatRoom {
  _id: String!
  members: [String!]!
  photoURL: String
  isGroup: Boolean!
  name: String
  admin: String
  createdAt: String!
  updatedAt: String!
}

type Message {
  _id: String!
  message: String!
  type: String!
  senderId: String!
  seen: String
  file: String
  images: String
  reaction: String
  chatRoomId: String!
  createdAt: String!
  updatedAt: String!
}

type Friend {
  _id: String!
  senderId: String!
  recipientId: String!
  createdAt: String!
}

type FriendRequest {
  _id: String!
  senderId: String!
  recipientId: String!
  createdAt: String!
}

type DataNotify {
  message: Message
  chatRoom: ChatRoom
  friend: Friend
  friendRequest: FriendRequest
}

type DataVideoCall {
  fullName: String
  photoURL: String
  chatRoomId: String
  isGroup: Boolean
}

type NotifyResponse {
  message: String
  type: String!
  senderId: String!
  recipientId: String!
  dataVideoCall: DataVideoCall
  dataNotify: DataNotify
}

type InitialDataResponse {
  userInfo: User!
  listFriend: [Friend!]!
  listFriendRequest: [FriendRequest!]!
  listChatRoom: [ChatRoom!]!
}

type User {
  _id: String!
  email: String!
  photoURL: String
  fullName: String!
  phoneNumber: String
  fcmToken: String
  createdAt: String!
  updatedAt: String!
  initialData: InitialDataResponse
}

type Query {
  users: [User!]!
  findUserSuggestion(userId: String!): [User!]!
  user(_id: String!): User!
  getInitialDataOfUser(userId: String!): InitialDataResponse!
  generateRtcToken(generateRtcTokenInput: GenerateRtcTokenInput!): String!
  chatRooms: [ChatRoom!]!
  chatRoom(_id: String!): ChatRoom!
  getListChatRoomOfUser(_id: String!): [ChatRoom!]!
  messages: [Message!]!
  message(_id: String!): Message!
  getFileByKey(key: String!): Message!
  getAllMessagesByChatRoomId(chatRoomId: String!): [Message!]!
  getLastMessage(chatRoomId: String!): Message!
  getListFriendOfUser(userId: String!): [Friend!]!
  getFriendRequestBySenderId(senderId: String!): [FriendRequest!]!
  getFriendRequestByRecipientId(recipientId: String!): [FriendRequest!]!
}

input GenerateRtcTokenInput {
  chatRoomId: String!
  userId: String!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(_id: String!): User!
  createChatRoom(createChatRoomInput: CreateChatRoomInput!): ChatRoom!
  updateChatRoom(updateChatRoomInput: UpdateChatRoomInput!): ChatRoom!
  removeChatRoom(_id: String!): ChatRoom!
  videoCall(notifyInput: NotifyInput!): NotifyResponse!
  createMessage(createMessageInput: CreateMessageInput!): Message!
  updateMessage(updateMessageInput: UpdateMessageInput!): Message!
  removeMessage(_id: String!): Message!
  createFriend(createFriendInput: CreateFriendInput!): Friend!
  removeFriend(_id: String!): Friend!
  createFriendRequest(createFriendRequestInput: CreateFriendRequestInput!): FriendRequest!
  removeFriendRequest(_id: String!): FriendRequest!
}

input CreateUserInput {
  email: String!
  photoURL: String = ""
  fullName: String!
  phoneNumber: String = ""
  fcmToken: String = ""
}

input UpdateUserInput {
  email: String
  photoURL: String = ""
  fullName: String
  phoneNumber: String = ""
  fcmToken: String = ""
  _id: String!
}

input CreateChatRoomInput {
  members: [String!]!
  photoURL: String = ""
  isGroup: Boolean!
  name: String = ""
  admin: String = ""
}

input UpdateChatRoomInput {
  members: [String!]
  photoURL: String = ""
  isGroup: Boolean
  name: String = ""
  admin: String = ""
  _id: String!
}

input NotifyInput {
  message: String
  type: String!
  senderId: String!
  recipientId: String!
  fullName: String
  photoURL: String
  chatRoomId: String
  isGroup: Boolean
}

input CreateMessageInput {
  message: String!
  type: String!
  senderId: String!
  seen: String = ""
  file: String = ""
  images: String = ""
  reaction: String = ""
  createdAt: String = ""
  updatedAt: String = ""
  chatRoomId: String!
}

input UpdateMessageInput {
  message: String
  type: String
  senderId: String
  seen: String = ""
  file: String = ""
  images: String = ""
  reaction: String = ""
  createdAt: String = ""
  updatedAt: String = ""
  chatRoomId: String
  _id: String!
}

input CreateFriendInput {
  senderId: String!
  recipientId: String!
}

input CreateFriendRequestInput {
  senderId: String!
  recipientId: String!
}

type Subscription {
  onCall: NotifyResponse!
  onSub: NotifyResponse!
}